<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/css' href='file:/C:/Program%20Files/Oxygen%20XML%20Editor%2026/frameworks/dita/DITA-OT/plugins/com.oxygenxml.webhelp.responsive/oxygen-webhelp/app/topic-page-print.css'?>
<?xml-stylesheet type='text/css' href='file:/C:/Program%20Files/Oxygen%20XML%20Editor%2026/frameworks/dita/DITA-OT/plugins/com.oxygenxml.pdf.css/css/print/p-dita.css'?>
<?xml-stylesheet type='text/css' href='file:/C:/Program%20Files/Oxygen%20XML%20Editor%2026/frameworks/dita/DITA-OT/plugins/com.oxygenxml.editlink/pdf-css.css'?>
<?xml-stylesheet type='text/css' href='file:/C:/Program%20Files/Oxygen%20XML%20Editor%2026/frameworks/dita/DITA-OT/plugins/com.oxygenxml.webhelp.responsive/templates/oxygen/oxygen-print.css'?>
<?xml-stylesheet type='text/css' href='file:/C:/Program%20Files/Oxygen%20XML%20Editor%2026/frameworks/dita/DITA-OT/plugins/com.oxygenxml.webhelp.responsive/templates/oxygen/notes.css'?>
<map xmlns:css2fo="http://www.oxygenxml.com/css2fo" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:nd="http://www.oxygenxml.com/css2fo/named-destinations" xmlns:opentopic="http://www.idiominc.com/opentopic" xmlns:opentopic-index="http://www.idiominc.com/opentopic/index" xmlns:oxy="http://www.oxygenxml.com/extensions/author" xmlns:xs="http://www.w3.org/2001/XMLSchema" cascade="merge" class="- map/map " ditaarch:DITAArchVersion="1.3" domains="(map mapgroup-d) (topic abbrev-d) (topic delay-d) a(props deliveryTarget) (map ditavalref-d) (map glossref-d) (topic hazard-d) (topic hi-d) (topic indexing-d) (topic markup-d) (topic pr-d) (topic relmgmt-d) (topic sw-d) (topic ui-d) (topic ut-d) (topic markup-d xml-d)" specializations="@props/deliveryTarget" xtrc="map:1;3:6" xtrf="file:/D:/Lija/Portfolio/DITAMaps/api_documentation.ditamap" xml:lang="en"><oxy:front-page class="- front-page/front-page "><oxy:front-page-title class="- front-page/front-page-title "><title xmlns:ot-placeholder="http://suite-sol.com/namespaces/ot-placeholder" class="- topic/title ">API Documentation</title></oxy:front-page-title></oxy:front-page><opentopic:map xmlns:ot-placeholder="http://suite-sol.com/namespaces/ot-placeholder" class="- toc/toc "><oxy:toc-title class="- toc/title " empty="true"/>
    <title class="- topic/title ">API Documentation</title>
    <topicref is-chapter="true" class="- map/topicref " href="#unique_1" type="concept"><topicmeta class="- map/topicmeta " data-topic-id="introduction"><resourceid appid="introduction" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_1" class="- topic/navtitle ">Introduction</navtitle><?ditaot gentext?></topicmeta><topicref class="- map/topicref " href="#unique_2" type="task"><topicmeta class="- map/topicmeta " data-topic-id="getting_started"><resourceid appid="getting_started" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_2" class="- topic/navtitle ">Getting Started: Obtain an API Key</navtitle><?ditaot gentext?><?ditaot genshortdesc?><shortdesc class="- map/shortdesc ">Follow these steps to get your API key from OpenWeatherMap for use with the Weather         API.</shortdesc></topicmeta></topicref><topicref class="- map/topicref " href="#unique_3" type="concept"><topicmeta class="- map/topicmeta " data-topic-id="authentication"><resourceid appid="authentication" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_3" class="- topic/navtitle ">Authentication</navtitle><?ditaot gentext?></topicmeta></topicref><topicref class="- map/topicref " href="#unique_4" type="concept"><topicmeta class="- map/topicmeta " data-topic-id="pagination"><resourceid appid="pagination" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_4" class="- topic/navtitle ">Pagination</navtitle><?ditaot gentext?></topicmeta></topicref><topicref class="- map/topicref " href="#unique_5" type="concept"><topicmeta class="- map/topicmeta " data-topic-id="rate_limiting"><resourceid appid="rate_limiting" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_5" class="- topic/navtitle ">Rate Limiting</navtitle><?ditaot gentext?></topicmeta></topicref></topicref>
    <topicref is-chapter="true" class="- map/topicref " href="#unique_6" type="concept"><topicmeta class="- map/topicmeta " data-topic-id="get_weather"><resourceid appid="get_weather" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_6" class="- topic/navtitle ">GET  /Weather</navtitle><?ditaot gentext?></topicmeta><topicref class="- map/topicref " href="#unique_7" type="task"><topicmeta class="- map/topicmeta " data-topic-id="how_to_get_current_weather_using_the_weather_endpoint"><resourceid appid="how_to_get_current_weather_using_the_weather_endpoint" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_7" class="- topic/navtitle ">How to Get Current Weather Using the Weather Endpoint</navtitle><?ditaot gentext?></topicmeta></topicref><topicref class="- map/topicref " href="#unique_8" type="reference"><topicmeta class="- map/topicmeta " data-topic-id="api_response_fields"><resourceid appid="api_response_fields" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_8" class="- topic/navtitle ">Response fields</navtitle><?ditaot gentext?></topicmeta></topicref></topicref>
</opentopic:map><concept break-before="true" is-chapter="true" class="- topic/topic concept/concept " id="unique_1" topicrefclass="- map/topicref " nd:nd-id="introduction" oid="introduction" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">Introduction</ph></title>
    <conbody class="- topic/body  concept/conbody ">
        <p class="- topic/p ">Welcome to the <b class="+ topic/ph hi-d/b ">Weather &amp; Task API</b> documentation. This API provides two
            powerful sets of endpoints designed to help developers integrate weather data and task
            management capabilities into their applications with ease. </p>
        <p class="- topic/p ">The Weather &amp; Task API provides two sets of functionalities</p>
        <ol class="- topic/ol " id="unique_1_Connect_42_ol_jts_btk_bfc" nd:nd-id="ol_jts_btk_bfc">
            <li class="- topic/li ">A simple /weather endpoint for retrieving real-time weather by city. It’s ideal for
                apps that need to display live temperature, weather descriptions, or customize
                content based on location.</li>
            <li class="- topic/li ">A /tasks endpoints offer a full-featured task management system. Developers can: <ul class="- topic/ul " id="unique_1_Connect_42_ul_n3x_q5k_bfc" nd:nd-id="ul_n3x_q5k_bfc">
                    <li class="- topic/li ">
                        <p class="- topic/p ">Create, read, update, and delete tasks (CRUD)</p>
                    </li>
                    <li class="- topic/li ">
                        <p class="- topic/p ">Retrieve paginated task lists</p>
                    </li>
                    <li class="- topic/li ">
                        <p class="- topic/p ">Perform partial updates (PATCH)</p>
                    </li>
                    <li class="- topic/li ">
                        <p class="- topic/p ">Use query parameters for flexible data fetching</p>
                    </li>
                    <li class="- topic/li ">
                        <p class="- topic/p ">Handle rate limits gracefully using standard HTTP headers</p>
                    </li>
                </ul></li>
        </ol>
        <p class="- topic/p ">This documentation is your complete guide to integrating and using the Weather &amp; Task
            API efficiently. Whether you’re building a weather widget or a productivity tool, you’ll
            find all the examples, parameters, and error handling you need to succeed.</p>
    </conbody>
<task class="- topic/topic task/task " id="unique_2" topicrefclass="- map/topicref " nd:nd-id="getting_started" oid="getting_started" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">Getting Started: Obtain an API Key</ph></title>
    <shortdesc class="- topic/shortdesc ">Follow these steps to get your API key from OpenWeatherMap for use with the Weather
        API.</shortdesc>
    <taskbody class="- topic/body task/taskbody ">
        <steps class="- topic/ol task/steps ">
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Go to <xref class="- topic/xref " format="html" href="https://home.openweathermap.org/users/sign_in" scope="external"><?ditaot usertext?>Openweathermap</xref> website.</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Click on <b class="+ topic/ph hi-d/b ">Sign in to your account.</b></cmd>
                <info class="- topic/itemgroup task/info ">
                    <fig class="- topic/fig " id="unique_2_Connect_42_fig_mbx_21l_bfc" nd:nd-id="fig_mbx_21l_bfc"><title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">Postman Login Screen</ph></title><image class="- topic/image " dita-ot:image-width="602" dita-ot:image-height="513" href="file:/D:/Lija/Portfolio/Images/Postman_Login_Screen.PNG" id="unique_2_Connect_42_image_nbx_21l_bfc" nd:nd-id="image_nbx_21l_bfc" placement="inline"/></fig>
                    <note class="- topic/note " id="unique_2_Connect_42_note_jqt_f1l_bfc" nd:nd-id="note_jqt_f1l_bfc">If you don’t have an account, click &lt;b&gt;Create an
                        Account&lt;/b&gt; and register.</note>
                </info>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Once signed in, click on your profile name in the top menu.</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">From the dropdown, select &lt;b&gt;My API keys&lt;/b&gt;.</cmd>
                <info class="- topic/itemgroup task/info ">
                    <fig class="- topic/fig " id="unique_2_Connect_42_fig_fzb_qxk_bfc" nd:nd-id="fig_fzb_qxk_bfc"><title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">My API Key</ph></title><image class="- topic/image " dita-ot:image-width="1899" dita-ot:image-height="294" href="file:/D:/Lija/Portfolio/Images/Postman_APIKey.PNG" id="unique_2_Connect_42_image_gzb_qxk_bfc" nd:nd-id="image_gzb_qxk_bfc" placement="inline"/></fig>
                </info>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">You’ll see your existing API keys listed. Do one of the following:</cmd>
                <substeps class="- topic/ol task/substeps " id="unique_2_Connect_42_substeps_qwy_zxk_bfc" nd:nd-id="substeps_qwy_zxk_bfc">
                    <substep class="- topic/li task/substep ">
                        <cmd class="- topic/ph task/cmd ">Copy an existing key, or</cmd>
                    </substep>
                    <substep class="- topic/li task/substep ">
                        <cmd class="- topic/ph task/cmd ">Click <b class="+ topic/ph hi-d/b ">Generate</b> to create a new API key. Copy the new API
                            Key.</cmd>
                        <info class="- topic/itemgroup task/info ">
                            <note class="- topic/note " id="unique_2_Connect_42_note_i1p_r1l_bfc" nd:nd-id="note_i1p_r1l_bfc" type="important">These API keys are secret
                                and should not be shared with anyone. Treat them like
                                passwords.</note>
                        </info>
                    </substep>
                </substeps>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Optionally, give your API key a name for easy identification.</cmd>
            </step>
        </steps>
    </taskbody>
</task><concept class="- topic/topic concept/concept " id="unique_3" topicrefclass="- map/topicref " nd:nd-id="authentication" oid="authentication" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">Authentication</ph></title>
    <conbody class="- topic/body  concept/conbody ">
        <p class="- topic/p ">Authentication is the process of verifying the identity of a client before granting
            access to the API. </p>
        <p class="- topic/p ">This API uses an API key to authenticate requests. Including the correct API key in your
            request headers is required to access protected endpoints. It ensures that only
            authorized users can use the service and helps track usage per user.</p>
        <p class="- topic/p ">RRefer to the <b class="+ topic/ph hi-d/b "><xref class="- topic/xref " href="#unique_2" type="task"><?ditaot usertext?>Getting
                    Started<?ditaot genshortdesc?><desc class="- topic/desc ">Follow these steps to get your API key from OpenWeatherMap for use with the Weather         API.</desc></xref></b> section to learn how to obtain your API key.</p>
    </conbody>
</concept><concept class="- topic/topic concept/concept " id="unique_4" topicrefclass="- map/topicref " nd:nd-id="pagination" oid="pagination" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">Pagination</ph></title>
    <conbody class="- topic/body  concept/conbody ">
        <p class="- topic/p ">Pagination refers to dividing a large set of results into smaller, manageable chunks or
            "pages." When fetching data like task lists or weather logs, pagination prevents
            overloading the client and server with too much data at once. It also helps improve
            performance and allows users to navigate through data efficiently using
                <codeph class="+ topic/ph pr-d/codeph ">page</codeph> and <codeph class="+ topic/ph pr-d/codeph ">limit</codeph> parameters.</p>
        <p class="- topic/p ">For endpoints returning large datasets (e.g., <codeph class="+ topic/ph pr-d/codeph ">/tasks</codeph>):</p>
        <ul class="- topic/ul " id="unique_4_Connect_42_ul_bxf_1cl_bfc" nd:nd-id="ul_bxf_1cl_bfc">
            <li class="- topic/li ">
                <p class="- topic/p ">Use query parameters:<ul class="- topic/ul " id="unique_4_Connect_42_ul_zzn_bcl_bfc" nd:nd-id="ul_zzn_bcl_bfc">
                        <li class="- topic/li ">
                            <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">page</codeph>: Page number (default: 1)</p>
                        </li>
                        <li class="- topic/li ">
                            <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">limit</codeph>: Items per page (default: 10, max: 100)</p>
                        </li>
                    </ul></p>
            </li>
        </ul>
        <p class="- topic/p ">Example<codeblock class="+ topic/pre pr-d/codeblock " id="unique_4_Connect_42_codeblock_r4y_2cl_bfc" nd:nd-id="codeblock_r4y_2cl_bfc" xml:space="preserve">GET /tasks?page=2&amp;limit=20</codeblock></p>
    </conbody>
</concept><concept class="- topic/topic concept/concept " id="unique_5" topicrefclass="- map/topicref " nd:nd-id="rate_limiting" oid="rate_limiting" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">Rate Limiting</ph></title>
    <conbody class="- topic/body  concept/conbody ">
        <p class="- topic/p ">The API enforces rate limiting. It restricts the number of API requests a client can make
            within a specified time period. To maintain server performance and ensure fair access
            for all users, this API limits the number of requests based on the user’s subscription
            level. If the limit is exceeded, the API returns a <codeph class="+ topic/ph pr-d/codeph ">429 Too Many
                Requests</codeph> error. This helps protect the API from abuse and overload.<ol class="- topic/ol " id="unique_5_Connect_42_ol_ljp_2bl_bfc" nd:nd-id="ol_ljp_2bl_bfc">
                <li class="- topic/li ">Limit: 60 requests per minute.</li>
                <li class="- topic/li ">Headers:<ul class="- topic/ul " id="unique_5_Connect_42_ul_ar3_3bl_bfc" nd:nd-id="ul_ar3_3bl_bfc">
                        <li class="- topic/li ">
                            <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">X-RateLimit-Limit</codeph>: Max requests allowed</p>
                        </li>
                        <li class="- topic/li ">
                            <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">X-RateLimit-Remaining</codeph>: Requests left</p>
                        </li>
                        <li class="- topic/li ">
                            <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">Retry-After</codeph>: Time to wait before retrying after
                                hitting the limit</p>
                        </li>
                    </ul></li>
                <li class="- topic/li ">
                    <p class="- topic/p ">On exceeding limit:</p>
                    <codeblock class="+ topic/pre pr-d/codeblock " id="unique_5_Connect_42_codeblock_irk_tbl_bfc" nd:nd-id="codeblock_irk_tbl_bfc" xml:space="preserve">HTTP 429 Too Many Requests</codeblock>
                </li>
            </ol></p>
    </conbody>
</concept></concept><concept break-before="true" is-chapter="true" class="- topic/topic concept/concept " id="unique_6" topicrefclass="- map/topicref " nd:nd-id="get_weather" oid="get_weather" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">GET  /Weather</ph></title>
    <conbody class="- topic/body  concept/conbody ">
        <p class="- topic/p ">The <codeph class="+ topic/ph pr-d/codeph ">GET /Weather </codeph>endpoint allows users to retrieve current weather data
            for any location on Earth. It aggregates real-time data from global and local weather
            models, satellites, radars, and an extensive network of weather stations. The data is
            available in multiple formats, including JSON, XML, and HTML.</p>
        <p class="- topic/p ">This endpoint is designed to provide detailed weather information such as temperature,
            humidity, wind speed and direction, atmospheric pressure, cloud coverage, and
            visibility.</p>
        <section class="- topic/section " id="unique_6_Connect_42_section_ozq_52l_bfc" nd:nd-id="section_ozq_52l_bfc">
            <title class="- topic/title ">Usecases</title>
            <p class="- topic/p ">
                <ul class="- topic/ul " id="unique_6_Connect_42_ul_obv_w2l_bfc" nd:nd-id="ul_obv_w2l_bfc">
                    <li class="- topic/li ">
                        <p class="- topic/p ">Displaying weather information in travel and tourism apps</p>
                    </li>
                    <li class="- topic/li ">
                        <p class="- topic/p ">Powering smart home devices to react to local weather conditions</p>
                    </li>
                    <li class="- topic/li ">
                        <p class="- topic/p ">Building weather widgets or dashboards for websites or mobile apps</p>
                    </li>
                </ul>
            </p>
            <p class="- topic/p "/>
        </section>
    </conbody>
<task class="- topic/topic task/task " id="unique_7" topicrefclass="- map/topicref " nd:nd-id="how_to_get_current_weather_using_the_weather_endpoint" oid="how_to_get_current_weather_using_the_weather_endpoint" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">How to Get Current Weather Using the Weather Endpoint</ph></title>
    <taskbody class="- topic/body task/taskbody ">
        
        <prereq class="- topic/section task/prereq ">
            <p class="- topic/p ">You must have a valid API key. Refer to the <xref class="- topic/xref " href="#unique_2" type="task"><?ditaot usertext?>Getting Started t<?ditaot genshortdesc?><desc class="- topic/desc ">Follow these steps to get your API key from OpenWeatherMap for use with the Weather         API.</desc></xref>opic for
                more details.</p>
            <p class="- topic/p ">Ensure your application can make HTTP GET requests.</p>
        </prereq>
        
        <context class="- topic/section task/context ">
            <p class="- topic/p ">The <codeph class="+ topic/ph pr-d/codeph ">/weather</codeph> endpoint provides real-time weather data using various query parameters such as city name or coordinates. Responses are returned in JSON by default.</p>
        </context>
        
        <steps class="- topic/ol task/steps ">
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Send a <b class="+ topic/ph hi-d/b ">GET</b> request to the following endpoint:</cmd>
                <info class="- topic/itemgroup task/info ">
                    <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve">https://api.openweathermap.org/data/2.5/weather</codeblock>
                </info>
            </step>
            
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Include the following parameters:</cmd>
                <info class="- topic/itemgroup task/info ">
                    <table class="- topic/table " frame="all" id="unique_7_Connect_42_table_b3r_5gl_bfc" nd:nd-id="table_b3r_5gl_bfc">
                        <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">Parameters</ph></title>
                        <tgroup align="left" class="- topic/tgroup " cols="3">
                            <colspec align="left" class="- topic/colspec " colname="col1" colnum="1" colwidth="1*" xtrc="colspec:1;32:90" xtrf="file:/D:/Lija/Portfolio/Weather%20API/how_to_get_current_weather_using_the_weather_endpoint.dita" style="width:33.3333%;"/>
                            <colspec align="left" class="- topic/colspec " colname="col2" colnum="2" colwidth="1*" xtrc="colspec:2;33:90" xtrf="file:/D:/Lija/Portfolio/Weather%20API/how_to_get_current_weather_using_the_weather_endpoint.dita" style="width:33.3333%;"/>
                            <colspec align="left" class="- topic/colspec " colname="col3" colnum="3" colwidth="1*" xtrc="colspec:3;34:90" xtrf="file:/D:/Lija/Portfolio/Weather%20API/how_to_get_current_weather_using_the_weather_endpoint.dita" style="width:33.3333%;"/>
                            <thead class="- topic/thead ">
                                <row class="- topic/row "><entry align="left" class="- topic/entry " colname="col1" dita-ot:x="1" dita-ot:y="1">Name</entry><entry align="left" class="- topic/entry " colname="col2" dita-ot:x="2" dita-ot:y="1">Parameter Type (in)</entry><entry align="left" class="- topic/entry " colname="col3" dita-ot:x="3" dita-ot:y="1">Example</entry></row>
                            </thead>
                            <tbody class="- topic/tbody ">
                                <row class="- topic/row "><entry class="- topic/entry " colname="col1" dita-ot:x="1" dita-ot:y="2">zip</entry><entry class="- topic/entry " colname="col2" dita-ot:x="2" dita-ot:y="2">query</entry><entry class="- topic/entry " colname="col3" dita-ot:x="3" dita-ot:y="2">65051</entry></row>
                                <row class="- topic/row "><entry class="- topic/entry " colname="col1" dita-ot:x="1" dita-ot:y="3">units</entry><entry class="- topic/entry " colname="col2" dita-ot:x="2" dita-ot:y="3">query</entry><entry class="- topic/entry " colname="col3" dita-ot:x="3" dita-ot:y="3">Imperial</entry></row>
                            </tbody>
                        </tgroup>
                    </table>
                </info>
            </step>
            
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Include your API key using the <codeph class="+ topic/ph pr-d/codeph ">appid</codeph> query parameter.</cmd>
                <info class="- topic/itemgroup task/info ">
                    <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve">appid=your_api_key</codeblock>
                </info>
            </step>
            
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">(Optional) Add other query parameters to customize the response:</cmd>
                <info class="- topic/itemgroup task/info ">
                    <ul class="- topic/ul ">
                        <li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">units</codeph> – Metric, imperial, or standard</li>
                        <li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mode</codeph> – Response format (json, xml, html)</li>
                    </ul>
                </info>
            </step>
            
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Execute the request and inspect the response.</cmd>
                <info class="- topic/itemgroup task/info ">
                    <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve">GET https://api.openweathermap.org/data/2.5/weather?zip=95050&amp;units=imperial</codeblock>
                    <codeblock class="+ topic/pre pr-d/codeblock " id="unique_7_Connect_42_codeblock_cpy_yhl_bfc" nd:nd-id="codeblock_cpy_yhl_bfc" xml:space="preserve">curl --location --globoff 'https://api.openweathermap.org/data/2.5/weather?zip=95050&amp;units=imperial&amp;appid=••••••'</codeblock>
                </info>
            </step>
        </steps>
        
        <result class="- topic/section task/result ">
            <p class="- topic/p ">If the request is successful, a <codeph class="+ topic/ph pr-d/codeph ">200 OK</codeph> response is returned with the current weather data.</p>
            <p class="- topic/p ">Example:</p>
            <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve"><b class="+ topic/ph hi-d/b "><codeph class="+ topic/ph pr-d/codeph ">{
    "coord": {
        "lon": -121.953,
        "lat": 37.3492
    },
    "weather": [
        {
            "id": 804,
            "main": "Clouds",
            "description": "overcast clouds",
            "icon": "04n"
        }
    ],
    "base": "stations",
    "main": {
        "temp": 53.46,
        "feels_like": 52.36,
        "temp_min": 50.41,
        "temp_max": 54.28,
        "pressure": 1018,
        "humidity": 82,
        "sea_level": 1018,
        "grnd_level": 996
    },
    "visibility": 10000,
    "wind": {
        "speed": 3.44,
        "deg": 0
    },
    "clouds": {
        "all": 100
    },
    "dt": 1745147846,
    "sys": {
        "type": 1,
        "id": 5845,
        "country": "US",
        "sunrise": 1745155545,
        "sunset": 1745203627
    },
    "timezone": -25200,
    "id": 0,
    "name": "Santa Clara",
    "cod": 200
}           </codeph></b></codeblock>
        </result>
        
        <postreq class="- topic/section task/postreq ">
            <p class="- topic/p ">Handle possible errors:</p>
            <ul class="- topic/ul ">
                <li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">401 Unauthorized</codeph> – Invalid or missing API key</li>
                <li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">404 Not Found</codeph> – Invalid location parameters</li>
                <li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">429 Too Many Requests</codeph> – Rate limit exceeded</li>
            </ul>
        </postreq>
    </taskbody>
</task><reference class="- topic/topic       reference/reference " id="unique_8" topicrefclass="- map/topicref " nd:nd-id="api_response_fields" oid="api_response_fields" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">Response fields</ph></title>
    <refbody class="- topic/body        reference/refbody "><section class="- topic/section ">
        <title class="- topic/title ">Response Field Descriptions</title>
        <simpletable class="- topic/simpletable ">
            <sthead class="- topic/sthead ">
                <stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="1">Field</stentry>
                <stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="1">Description</stentry>
            </sthead>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="2">coord.lon</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="2">Longitude of the location</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="3">coord.lat</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="3">Latitude of the location</stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="4">weather.id</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="4">Weather condition ID</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="5">weather.main</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="5">Group of weather parameters (Rain, Snow, Clouds, etc.)</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="6">weather.description</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="6">Detailed description of the weather condition</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="7">weather.icon</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="7">Weather icon ID</stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="8">base</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="8">Internal parameter</stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="9">main.temp</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="9">Temperature. Default: Kelvin. Metric: Celsius. Imperial: Fahrenheit</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="10">main.feels_like</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="10">Perceived temperature. Same units as <codeph class="+ topic/ph pr-d/codeph ">main.temp</codeph></stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="11">main.pressure</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="11">Atmospheric pressure (hPa)</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="12">main.humidity</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="12">Humidity in percentage (%)</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="13">main.temp_min</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="13">Minimum observed temperature. Same units as <codeph class="+ topic/ph pr-d/codeph ">main.temp</codeph></stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="14">main.temp_max</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="14">Maximum observed temperature. Same units as <codeph class="+ topic/ph pr-d/codeph ">main.temp</codeph></stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="15">main.sea_level</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="15">Atmospheric pressure at sea level (hPa)</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="16">main.grnd_level</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="16">Atmospheric pressure at ground level (hPa)</stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="17">visibility</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="17">Visibility in meters. Max value: 10,000</stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="18">wind.speed</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="18">Wind speed. Default/Metric: m/s, Imperial: mph</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="19">wind.deg</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="19">Wind direction in degrees (meteorological)</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="20">wind.gust</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="20">Wind gust. Same units as <codeph class="+ topic/ph pr-d/codeph ">wind.speed</codeph></stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="21">clouds.all</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="21">Cloudiness in percentage (%)</stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="22">rain.1h</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="22">Precipitation in the last hour (mm/h), if available</stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="23">snow.1h</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="23">Snowfall in the last hour (mm/h), if available</stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="24">dt</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="24">Time of data calculation (UNIX UTC)</stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="25">sys.type</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="25">Internal parameter</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="26">sys.id</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="26">Internal parameter</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="27">sys.country</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="27">Country code (e.g., GB, JP)</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="28">sys.sunrise</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="28">Sunrise time (UNIX UTC)</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="29">sys.sunset</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="29">Sunset time (UNIX UTC)</stentry></strow>
            
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="30">timezone</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="30">Time shift from UTC in seconds</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="31">id</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="31">City ID</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="32">name</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="32">City name</stentry></strow>
            <strow class="- topic/strow "><stentry class="- topic/stentry " dita-ot:x="1" dita-ot:y="33">cod</stentry><stentry class="- topic/stentry " dita-ot:x="2" dita-ot:y="33">Internal parameter (status code)</stentry></strow>
            
        </simpletable>
    </section> </refbody>
</reference></concept></map>